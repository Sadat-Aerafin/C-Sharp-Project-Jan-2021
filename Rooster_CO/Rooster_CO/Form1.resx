<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>